# Generated by Django 3.2.7 on 2022-05-09 02:05

from django.db import migrations, IntegrityError
from django.db.models import Q

from upapp.models import CustomProject, Project, UserProject


def getCustomProjectKey(customProject):
    skillIds = [str(s.id) for s in customProject.skills.all()]
    skillIds.sort()
    return (
        customProject.project_id,
        customProject.skillLevelBit,
        tuple(skillIds)
    )


def getProjectKey(project):
    skillIds = [str(s.id) for s in project.skills.all()]
    skillIds.sort()
    return (
        project.id,
        1,
        tuple(skillIds)
    )


def consolidateCustomProjects(_x, _y):
    customProjects = {getCustomProjectKey(cp): cp for cp in CustomProject.objects.prefetch_related('skills').all()}
    usedCustomProjectIds = set()

    # Make sure the correct custom project exists for each project
    for project in Project.objects.prefetch_related('skills').all():
        if not (customProject := customProjects.get(getProjectKey(project))):
            customProject = CustomProject(
                project=project,
                skillLevelBit=1
            )
            customProject.save()
            for skill in project.skills.all():
                customProject.skills.add(skill)

            customProjects[getCustomProjectKey(customProject)] = customProject

        usedCustomProjectIds.add(customProject.id)

    # Update user projects to point to correct custom project
    userProjectIdsToDelete = []
    existingUserProjects = set()
    for userProject in UserProject.objects\
            .select_related('customProject', 'customProject__project')\
            .prefetch_related('customProject__project__skills')\
            .all():
        defaultCustomProject = customProjects[getProjectKey(userProject.customProject.project)]
        userProject.customProject = defaultCustomProject
        userProjectKey = (defaultCustomProject.id, userProject.user_id)
        if userProjectKey in existingUserProjects:
            userProjectIdsToDelete.append(userProject.id)
        else:
            existingUserProjects.add(userProjectKey)
            userProject.save()

    UserProject.objects.filter(id__in=userProjectIdsToDelete).delete()

    # Delete all other custom projects
    filter = ~Q(id__in=usedCustomProjectIds)
    CustomProject.objects.filter(filter).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('upapp', '0093_delete_projectinstructions'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='employerjob',
            name='allowedProjects',
        ),
        # migrations.RunPython(consolidateCustomProjects),
    ]
